name: CI/CD Pipeline with Terraform

on:
  push:
    branches:
      - main  # Only run on pushes to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v2  # Set up Node.js for testing
      with:
        node-version: '14'  # Change version as needed for your project

    - name: Install Dependencies
      run: npm install  # Ensure you have package.json setup before this step

    - name: Run Tests with Coverage
      run: npm test -- --coverage  # Run Jest tests and collect coverage data

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage/lcov.info  # Ensure this points to your coverage report
        token: ${{ secrets.CODECOV_TOKEN }}  # Optional: token for private repos

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Initialize Terraform
      run: terraform init
      working-directory: infra/terraform  # Path to Terraform files

    - name: Terraform Refresh
      run: terraform refresh
      working-directory: infra/terraform  # Path to Terraform files

    - name: Terraform Destroy Existing Instance
      working-directory: infra/terraform
      run: terraform destroy -auto-approve -target=aws_instance.app_server

    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan
      working-directory: infra/terraform  # Path to Terraform files

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      working-directory: infra/terraform  # Path to Terraform files
